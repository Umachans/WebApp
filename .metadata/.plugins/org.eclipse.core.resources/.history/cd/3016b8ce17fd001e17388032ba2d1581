
package com.example.demo.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import com.example.demo.constant.UrlConst;

import lombok.RequiredArgsConstructor;

@EnableWebSecurity
@Configuration
@RequiredArgsConstructor
public class WebSecurityConfig {
	
	/*パスワードエンコーダー*/
	private final PasswordEncoder passwordEncoder;
	
	/*ユーザー情報取得*/
	private final UserDetailsService userDetailsService;
	
	
	/*ユーザー名のname属性*/
	private final String USER_NAME_PARAMETER="loginId";
	
	@Bean
	SecurityFilterChain securityFilterChain(HttpSecurity http)throws Exception{
		
		//ログインに成功したら/menuがリダイレクトされる
		http.authorizeHttpRequests(
				authorize -> authorize.requestMatchers(UrlConst.NO_AUTHENTICATION).permitAll()
				 .anyRequest().authenticated())
		   .formLogin(
				login -> login.loginPage(UrlConst.LOGIN)//自作ログイン画面(Controller)を使うための設定
				.usernameParameter(USER_NAME_PARAMETER)//ユーザー名パラメーターのname属性
				.defaultSuccessUrl(UrlConst.MENU));//ログイン成功時のリダイレクトURL
		
		return http.build();
	}
	
	

}
